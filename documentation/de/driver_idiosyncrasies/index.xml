<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Eigenheiten der Driver on Dokumentation für Selenium</title><link>https://www.selenium.dev/documentation/de/driver_idiosyncrasies/</link><description>Recent content in Eigenheiten der Driver on Dokumentation für Selenium</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>2013-{year}</copyright><atom:link href="https://www.selenium.dev/documentation/de/driver_idiosyncrasies/index.xml" rel="self" type="application/rss+xml"/><item><title>Allgemeine capabilities</title><link>https://www.selenium.dev/documentation/de/driver_idiosyncrasies/shared_capabilities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/de/driver_idiosyncrasies/shared_capabilities/</guid><description>Um eine neue Sitzung mit dem Selenium WebDriver zu erstellen, ist es notwendig das die Grundlegenden capabilites zur Verfügung gestellt werden.
Das Zielsystem benutzt dabei die gleichen Einstellungen in den capabilities um eine Sitzung zu erstellen und ermöglich Details dieser Sitzung abzufragen.
WebDriver stellt capabilites zur Verfügung und jeder Adapter sollte diese Implementierung unterstützen. Folgende capabilites werden von WebDriver unterstützt:
browserName: Diese Capability wird verwendet um den browserName für eine Sitzung zu definieren.</description></item><item><title>Driver spezifische Capabilities</title><link>https://www.selenium.dev/documentation/de/driver_idiosyncrasies/driver_specific_capabilities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/de/driver_idiosyncrasies/driver_specific_capabilities/</guid><description>Firefox Definerte Capabilities in den FirefoxOptions FirefoxOptions ist die neue Methode um Capabilities für den Firefoxbrowser zu definieren und sollte bevorzugt verwendet werden statt den DesiredCapabilities and should generally be used in preference to DesiredCapabilities.
Java Python C# Ruby JavaScript Kotlin FirefoxOptions options = new FirefoxOptions(); options.addPreference(&amp;#34;network.proxy.type&amp;#34;, 0); driver = new RemoteWebDriver(options); from selenium.webdriver.firefox.options import Options options = Options() options.headless = True driver = webdriver.Firefox(options=options) var options = new FirefoxOptions(); options.</description></item></channel></rss>